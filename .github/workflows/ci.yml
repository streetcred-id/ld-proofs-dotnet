name: Build, Test & Package

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      packageVersion:
        description: "Package Version"
        required: true
        default: "1.0.0"

jobs:
  nuget:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run:
          dotnet restore
          # set pr number, if it's a pr build
      - name: set pr build number
        id: PRNUMBER
        if: ${{ github.event_name == 'pull_request' }}
        uses: kkak10/pr-number-action@v1.3
        # set report file and title
      - name: Set Test Title
        run: |
          if ${{ github.event_name == 'pull_request' }}
          then
            echo "::set-env name=title::Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})"
            echo "::set-env name=file_name::TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md"
          else
            echo "::set-env name=title::Test Run ${{github.run_number}}"
            echo "::set-env name=file_name::TestReport.${{github.run_number}}.md"
          fi
      - run: dotnet test --no-restore --no-build --configuration Release --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};"
      - run: dotnet pack -c Release
      - uses: actions/upload-artifact@v2
        with:
          name: nuget
          path: |
            **/*.nupkg
            **/*.snupkg
        # upload report as build artifact
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        if: ${{always()}}
        with:
          name: "Test Run"
          path: ${{github.workspace}}/${{env.file_name}}
        # add report as PR comment (if PR)
      - name: comment PR
        uses: machine-learning-apps/pr-comment@master
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ${{env.file_name}}
